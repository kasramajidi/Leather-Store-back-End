{
  "openapi": "3.1.0",
  "info": {
    "title": "<leather-store❤️ />",
    "description": "Description For leather-store Project",
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "Authorization": {
        "type": "apiKey",
        "name": "Authorization",
        "scheme": "bearer",
        "in": "header",
        "description": "User token form authorization: **Bearer [user_token]**"
      }
    }
  },
  "tags": [
    {
      "name": "Auth",
      "description": "This route for login and register and get all user"
    },
    {
      "name": "User",
      "description": "This route for user"
    },
    {
      "name": "Newsletter",
      "description": "This route for Newsletter"
    },
    {
      "name": "Criticisms",
      "description": "This route for Criticisms"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "This api for users register in site",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "username": "kasra1382",
                  "email": "kasra@email.com",
                  "password": "Aasjdj1254"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successfully register"
          },
          "400": {
            "description": "Please enter username, email and password"
          },
          "401": {
            "description": "Username must be at least 3 or 15 chars long"
          },
          "402": {
            "description": "The email is invalid"
          },
          "403": {
            "description": "The password is invalid"
          },
          "405": {
            "description": "Email is already registered."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "This api for users login in site",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "kasra@email.com",
                  "password": "Aasjdj1254"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful!"
          },
          "400": {
            "description": "Please enter email and password"
          },
          "401": {
            "description": "The email is invalid"
          },
          "402": {
            "description": "The password is invalid"
          },
          "403": {
            "description": "Invalid email or password."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "This api for users logout in site",
        "responses": {
          "200": {
            "description": "Login successful!"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "user/getAllUser": {
      "get": {
        "tags": ["User"],
        "summary": "This api for get all user in site",
        "responses": {
          "200": {
            "description": "get all user"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "user/getuserid/:id": {
      "get": {
        "tags": ["User"],
        "summary": "This api for get one user by id",
        "responses": {
          "200": {
            "description": "This api has get one user"
          },
          "400": {
            "description": "ID is not vaild"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "title": "id",
            "in": "id",
            "required": true,
            "type": "string",
            "description": "You have to enter the id to show you one by one"
          }
        ]
      },
      "delete": {
        "tags": ["User"],
        "summary": "This api for remove user",
        "responses": {
          "200": {
            "description": "This post has been successfully deleted"
          },
          "400": {
            "description": "ID is not vaild"
          },
          "401": {
            "description": "user not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "pageID",
            "in": "id",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "tags": ["User"],
        "summary": "This api for update user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "username": "kasra1382",
                  "email": "kasra@email.com",
                  "password": "Aasjdj1254"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This post has been successfully update"
          },
          "400": {
            "description": "ID is not vaild"
          },
          "401": {
            "description": "Please enter username, email and password"
          },
          "402": {
            "description": "Username must be at least 3 or 15 chars long"
          },
          "403": {
            "description": "The email is invalid"
          },
          "404": {
            "description": "The password is invalid"
          },

          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "user/getusername/:username": {
      "get": {
        "tags": ["User"],
        "summary": "This api for get one user by username",
        "responses": {
          "200": {
            "description": "This api has get one user"
          },
          "400": {
            "description": "ID is not vaild"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "title": "username",
            "in": "username",
            "required": true,
            "type": "string",
            "description": "You have to enter the username to show you one by one"
          }
        ]
      },
      "delete": {
        "tags": ["User"],
        "summary": "This api for remove user",
        "responses": {
          "200": {
            "description": "This post has been successfully deleted"
          },
          "400": {
            "description": "ID is not vaild"
          },
          "401": {
            "description": "user not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "username",
            "in": "username",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "newsletter/create": {
      "post": {
        "tags": ["Newsletter"],
        "summary": "This api for users Newsletter in site",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "kasra@email.com"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "You have successfully subscribed to the newsletter"
          },
          "400": {
            "description": "Please enter email"
          },
          "401": {
            "description": "The email is invalid"
          },
          "402": {
            "description": "Email is already registered."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "newsletter/getall": {
      "get": {
        "tags": ["Newsletter"],
        "summary": "This api for get all Newsletter in site",
        "responses": {
          "200": {
            "description": "get all Newsletter"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "newsletter/:id": {
      "delete": {
        "tags": ["Newsletter"],
        "summary": "This api for remove Newsletter",
        "responses": {
          "200": {
            "description": "This Newsletter has been successfully deleted"
          },
          "400": {
            "description": "ID is not vaild"
          },
          "401": {
            "description": "Newsletter not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "pageID",
            "in": "id",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "tags": ["Newsletter"],
        "summary": "This api for update Newsletter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "kasra@email.com"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This post has been successfully update"
          },
          "400": {
            "description": "ID is not Valid"
          },
          "401": {
            "description": "Please enter email"
          },
          "402": {
            "description": "The email is invalid"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/criticisms/create": {
      "post": {
        "tags": ["Criticisms"],
        "summary": "This api for create Criticisms in site",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "firstName": "سولماز ابراهیم زاده",
                  "lastName": "کاظم زاده",
                  "number": "0952668578",
                  "description": "لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ و با استفاده از طراحان گرافیک است چاپگرها و متون بلکه روزنامه و مجله در ستون و سطرآنچنان که لازم است و برای شرایط فعلی است.",
                  "email": "solmaz@gmail.com",
                  "rating": 2
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successfully Criticisms"
          },
          "400": {
            "description": "Please enter firstName"
          },
          "401": {
            "description": "Please enter lastName"
          },
          "402": {
            "description": "Please enter email"
          },
          "403": {
            "description": "Please enter number"
          },
          "405": {
            "description": "Please enter description"
          },
          "406": {
            "description": "Please enter rating"
          },
          "407": {
            "description": "The email is invalid"
          },
          "408": {
            "description": "The phone is invalid"
          },
          "409": {
            "description": "Rating must be a number between 1 and 5"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/criticisms/getall": {
      "get": {
        "tags": ["Criticisms"],
        "summary": "This api for get all Criticisms in site",
        "responses": {
          "200": {
            "description": "get all Criticisms"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/criticisms/:id": {
      "delete": {
        "tags": ["Criticisms"],
        "summary": "This api for remove user",
        "responses": {
          "200": {
            "description": "This post has been successfully deleted"
          },
          "400": {
            "description": "ID is not vaild"
          },
          "401": {
            "description": "There are no criticisms"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "pageID",
            "in": "id",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "tags": ["Criticisms"],
        "summary": "This api for update Criticisms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "firstName": "سولماز ابراهیم زاده",
                  "lastName": "کاظم زاده",
                  "number": "0952668578",
                  "description": "لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ و با استفاده از طراحان گرافیک است چاپگرها و متون بلکه روزنامه و مجله در ستون و سطرآنچنان که لازم است و برای شرایط فعلی است.",
                  "email": "solmaz@gmail.com",
                  "rating": 2
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Criticisms successfully update"
          },
          "400": {
            "description": "Please enter firstName"
          },
          "401": {
            "description": "Please enter lastName"
          },
          "402": {
            "description": "Please enter email"
          },
          "403": {
            "description": "Please enter number"
          },
          "405": {
            "description": "Please enter description"
          },
          "406": {
            "description": "Please enter rating"
          },
          "407": {
            "description": "The email is invalid"
          },
          "408": {
            "description": "The phone is invalid"
          },
          "409": {
            "description": "Rating must be a number between 1 and 5"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/criticisms/confirm/:id":{
      "put": {
        "tags": ["Criticisms"],
        "summary": "This api for update Criticisms confirmed",
        "parameters":{
          "name": "pageID",
          "required": true,
          "description": "Criticism ID to confirm",
          "schema":{
            "type": "string",
            "example": "65f3b2a1b3f32a4a34c7d123"
          }
        },
        "responses": {
          "200": {
            "description": "Criticism confirmed successfully"
          },
          "400": {
            "description": "ID is not valid"
          },
          "401": {
            "description": "Criticism not found" 
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/criticisms/confirm?confirmed=false":{
      "get": {
        "tags": ["Criticisms"],
        "summary": "This api for get all confirmed is false"
      }
    },
    "/criticisms/confirm?confirmed=true":{
      "get": {
        "tags": ["Criticisms"],
        "summary": "This api for get all confirmed is true"
      }
    }
  }
}
